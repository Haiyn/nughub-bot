name: ci-cd

on:
  pull_request:
    types:
      - opened
      - edited
  release:
    types:
      - created

jobs:
  ci-docker:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: haiyn/nughub-bot
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        if: github.event_name == 'release'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name == 'release' }}
          tags: ${{ steps.meta.outputs.tags }}

  cd-release:
    if: github.event_name == 'release'
    needs: ci-docker
    runs-on: ubuntu-20.04
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'none'
      - name: Add Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Set up sshpass
        run: sudo apt install sshpass -y
      - name: Login to Server
        run: sshpass -p ${{ secrets.SSH_PASSWORD }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}
      - name: Checkout
        run: cd nughub-bot && git pull origin main
      - name: Upgrade Docker Compose
        run: RELEASE_VERSION=${{ github.event_name == 'release' }} docker-compose up -d
